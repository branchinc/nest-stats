// Generated by CoffeeScript 1.6.3
(function() {
  var Q, StatsClient;

  Q = require('q');

  StatsClient = (function() {
    function StatsClient(options) {
      this.stathat = options.stathat;
      this.stathatEmail = options.stathatEmail;
      this.redis = options.redis;
      this.env = options.env;
    }

    StatsClient.prototype.incr = function(stat) {
      if (this.env === 'production') {
        return stathat.trackEZCount(this.stathatEmail, stat, 1, function() {});
      } else {
        return this.debug(stat);
      }
    };

    StatsClient.prototype.value = function(stat, value) {
      if (this.env === 'production') {
        return stathat.trackEZValue(this.stathatEmail, stat, value, function() {});
      } else if (this.env === 'development') {
        return this.debug(stat, value);
      }
    };

    StatsClient.prototype.time = function(stat, future) {
      var startTime,
        _this = this;
      startTime = new Date();
      return Q(future).then(function(result) {
        _this.value(stat, new Date() - startTime);
        return result;
      });
    };

    StatsClient.prototype.incrOnce = function(stat, value) {
      var day, redisKey,
        _this = this;
      day = Date.create("0:00:00-04:00").valueOf() / 1000;
      redisKey = "stats:incr_once:" + stat + ":" + day;
      return this.redis.q.sismember(redisKey, value).then(function(isMember) {
        if (!isMember) {
          _this.incr(stat);
          _this.redis.q.sadd(redisKey, value);
          return _this.redis.q.expire(redisKey, 86400);
        }
      });
    };

    StatsClient.prototype.debug = function(stat, value) {
      if (process.env.DEBUG) {
        if (value) {
          return console.log(stat, value);
        } else {
          return console.log(stat);
        }
      }
    };

    return StatsClient;

  })();

  module.exports = StatsClient;

}).call(this);
